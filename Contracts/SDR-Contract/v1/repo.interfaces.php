<?php
/* based on ORSCF SubjectData Contract v1.7.0.0 */

use \MedicalResearch\SubjectData\Model;

namespace MedicalResearch\SubjectData\StoreAccess {
  
  public interface ISubjects {
    
    /*
    * Loads a specific Subject addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.
    *
    * @param $subjectUid An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
    */
    function GetSubjectBySubjectUid(string $subjectUid): GetSubjectBySubjectUidResponse;
    
    /*
    * Loads Subjects.
    *
    * @param $page Number of the page, which should be returned
    * @param $pageSize Max count of Subjects which should be returned
    */
    function GetSubjects(int $page, int $pageSize): GetSubjectsResponse;
    
    /*
    * Loads Subjects where values matching to the given filterExpression
    *
    * @param $filterExpression a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'
    * @param $sortingExpression one or more property names which are used as sort order (before pagination)
    * @param $page Number of the page, which should be returned
    * @param $pageSize Max count of Subjects which should be returned
    */
    function SearchSubjects(string $filterExpression, string $sortingExpression, int $page, int $pageSize): SearchSubjectsResponse;
    
    /*
    * Adds a new Subject and returns its primary identifier (or null on failure).
    *
    * @param $subject Subject containing the new values
    */
    function AddNewSubject(Subject $subject): AddNewSubjectResponse;
    
    /*
    * Updates all values (which are not "FixedAfterCreation") of the given Subject addressed by the primary identifier fields within the given Subject. Returns false on failure or if no target record was found, otherwise true.
    *
    * @param $subject Subject containing the new values (the primary identifier fields within the given Subject will be used to address the target record)
    */
    function UpdateSubject(Subject $subject): UpdateSubjectResponse;
    
    /*
    * Updates all values (which are not "FixedAfterCreation") of the given Subject addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.
    *
    * @param $subjectUid An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
    * @param $subject Subject containing the new values (the primary identifier fields within the given Subject will be ignored)
    */
    function UpdateSubjectBySubjectUid(string $subjectUid, Subject $subject): UpdateSubjectBySubjectUidResponse;
    
    /*
    * Deletes a specific Subject addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.
    *
    * @param $subjectUid An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
    */
    function DeleteSubjectBySubjectUid(string $subjectUid): DeleteSubjectBySubjectUidResponse;
    
  }
  
  public interface ISubjectSiteAssignments {
    
    /*
    * Loads a specific SubjectSiteAssignment addressed by the given primary identifier. Returns null on failure, or if no record exists with the given identity.
    *
    * @param $subjectSiteAssignmentUid An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
    */
    function GetSubjectSiteAssignmentBySubjectSiteAssignmentUid(string $subjectSiteAssignmentUid): GetSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse;
    
    /*
    * Loads SubjectSiteAssignments.
    *
    * @param $page Number of the page, which should be returned
    * @param $pageSize Max count of SubjectSiteAssignments which should be returned
    */
    function GetSubjectSiteAssignments(int $page, int $pageSize): GetSubjectSiteAssignmentsResponse;
    
    /*
    * Loads SubjectSiteAssignments where values matching to the given filterExpression
    *
    * @param $filterExpression a filter expression like '((FieldName1 == "ABC" &amp;&amp; FieldName2 &gt; 12) || FieldName2 != "")'
    * @param $sortingExpression one or more property names which are used as sort order (before pagination)
    * @param $page Number of the page, which should be returned
    * @param $pageSize Max count of SubjectSiteAssignments which should be returned
    */
    function SearchSubjectSiteAssignments(string $filterExpression, string $sortingExpression, int $page, int $pageSize): SearchSubjectSiteAssignmentsResponse;
    
    /*
    * Adds a new SubjectSiteAssignment and returns its primary identifier (or null on failure).
    *
    * @param $subjectSiteAssignment SubjectSiteAssignment containing the new values
    */
    function AddNewSubjectSiteAssignment(SubjectSiteAssignment $subjectSiteAssignment): AddNewSubjectSiteAssignmentResponse;
    
    /*
    * Updates all values (which are not "FixedAfterCreation") of the given SubjectSiteAssignment addressed by the primary identifier fields within the given SubjectSiteAssignment. Returns false on failure or if no target record was found, otherwise true.
    *
    * @param $subjectSiteAssignment SubjectSiteAssignment containing the new values (the primary identifier fields within the given SubjectSiteAssignment will be used to address the target record)
    */
    function UpdateSubjectSiteAssignment(SubjectSiteAssignment $subjectSiteAssignment): UpdateSubjectSiteAssignmentResponse;
    
    /*
    * Updates all values (which are not "FixedAfterCreation") of the given SubjectSiteAssignment addressed by the supplementary given primary identifier. Returns false on failure or if no target record was found, otherwise true.
    *
    * @param $subjectSiteAssignmentUid An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
    * @param $subjectSiteAssignment SubjectSiteAssignment containing the new values (the primary identifier fields within the given SubjectSiteAssignment will be ignored)
    */
    function UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUid(string $subjectSiteAssignmentUid, SubjectSiteAssignment $subjectSiteAssignment): UpdateSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse;
    
    /*
    * Deletes a specific SubjectSiteAssignment addressed by the given primary identifier. Returns false on failure or if no target record was found, otherwise true.
    *
    * @param $subjectSiteAssignmentUid An <see href="https://de.wikipedia.org/wiki/Universally_Unique_Identifier">Universally Unique Identifier</see> which can be generated by any origin system and is used to address this ORSCF conform data record in decentralized environments. Note that this Identity must not be changed any more!
    */
    function DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUid(string $subjectSiteAssignmentUid): DeleteSubjectSiteAssignmentBySubjectSiteAssignmentUidResponse;
    
  }
  
}
